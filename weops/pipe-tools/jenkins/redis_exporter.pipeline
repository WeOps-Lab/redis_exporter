pipeline {
    agent {
        node('chaos')
    }

     parameters {
        string(name: 'BranchName', defaultValue: 'dev', description: null)
        string(name: 'GitTag', defaultValue: 'v1.0.0', description: null)
     }


    stages {
        stage('拉取代码') {
            steps {
                git url: 'https://proxy.zyun.vip/https://github.com/WeOps-Lab/redis_exporter', branch: "weops/${env.BranchName}"
            }
        }

        stage('重新部署监控对象') {
            steps {
                dir('weops/pipe-tools/charts') {
                    sh 'bash helm_uninstall.sh'
                    sleep 3
                    sh 'bash helm_install.sh'
                }
            }
        }

        stage('构建镜像') {
            steps {
                sh 'docker build -f weops/pipe-tools/docker/Dockerfile -t registry-svc:25000/library/redis-exporter:latest .'
            }
        }

        stage('推送镜像') {
            steps {
                sh 'docker push registry-svc:25000/library/redis-exporter:latest'
            }
        }

        stage('生成部署文件') {
            steps {
                dir('weops/pipe-tools/exporter/template') {
                    sh 'bash build.sh'
                }
            }
        }

        stage('部署探针'){
            steps {
                withKubeConfig(caCertificate: '', clusterName: '', contextName: '', credentialsId: 'chaos', namespace: '', serverUrl: 'https://10.10.90.113:6443') {
                    dir('weops/pipe-tools/exporter') {
                    sh 'kubectl replace --force -f cluster.yaml -n redis'
                    sh 'kubectl replace --force -f sentinel.yaml -n redis'
                    sh 'kubectl replace --force -f ./standalone -n redis'
                    }
                }
            }
        }

        stage('部署混沌工程'){
            steps {
                withKubeConfig(caCertificate: '', clusterName: '', contextName: '', credentialsId: 'chaos', namespace: '', serverUrl: 'https://10.10.90.113:6443') {
                    dir('weops/pipe-tools/chaos') {
                    sh 'kubectl apply -f ./ -n redis'
                    }
                }
            }
        }

        stage('提取探针制品'){
            steps {
                withKubeConfig(caCertificate: '', clusterName: '', contextName: '', credentialsId: 'chaos', namespace: '', serverUrl: 'https://10.10.90.113:6443') {
                    dir('weops/pipe-tools/bin') {
                    sh 'kubectl wait pod -n redis redis-exporter-standalone-v7-0 --for=condition=Ready --timeout=60s'
                    sh 'kubectl cp -n redis redis-exporter-standalone-v7-0:/redis_exporter ./redis_exporter -c redis-exporter-standalone-v7'
                    sh 'kubectl cp -n redis redis-exporter-standalone-v7-0:/redis_exporter_arm64 ./redis_exporter_arm64 -c redis-exporter-standalone-v7'
                    sh 'kubectl cp -n redis redis-exporter-standalone-v7-0:/redis_exporter.exe ./redis_exporter.exe -c redis-exporter-standalone-v7'
                    sh 'tar -cvzf weops_redis_exporter_${env.GitTag}.tar.gz weops_redis_exporter weops_redis_exporter.exe weops_redis_exporter_arm64'
                    }
                }
            }
        }

        stage('上传探针制品'){
            steps {
                dir('weops/pipe-tools/bin') {
                    minio bucket: 'release', credentialsId: 'minio', excludes: '', host: 'http://10.10.25.66:9000/', includes: '*.tar.gz', targetFolder: 'monitor_plugin/redis/binary'
                }
            }
        }
    }
}
