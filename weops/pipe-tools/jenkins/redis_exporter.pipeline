pipeline {
    agent {
        node('chaos')
    }

    parameters {
        string(name: 'BranchName', defaultValue: 'dev', description: null)
    }

    environment {
        namespace = 'redis'
        serverUrl = 'https://10.10.90.113:6443'
    }

    stages {
        stage('拉取代码') {
            steps {
                git url: 'https://proxy.zyun.vip/https://github.com/WeOps-Lab/redis_exporter', branch: "weops/${env.BranchName}"
            }
        }

        stage('重新部署监控对象') {
            steps {
                dir('weops/pipe-tools/charts') {
                    sh 'bash helm_uninstall.sh'
                    sleep 3
                    sh 'bash helm_install.sh'
                }
            }
        }

        stage('构建镜像') {
            steps {
             dir('weops/pipe-tools/docker') {
                    sh 'docker build -t registry-svc:25000/library/redis-exporter:latest .'
                }
            }
        }

        stage('推送镜像') {
            steps {
                sh 'docker push registry-svc:25000/library/redis-exporter:latest'
            }
        }

        stage('生成部署文件') {
            steps {
                dir('weops/pipe-tools/exporter/template') {
                    sh 'bash build.sh'
                }
            }
        }

        stage('部署应用程序') {
            steps {
                deployToKubernetes('pipe-tools/exporter', 'cluster.yaml sentinel.yaml ./standalone')
            }
        }

        stage('部署混沌工程') {
            steps {
                deployToKubernetes('pipe-tools/chaos', '.')
            }
        }
    }
}

def deployToKubernetes(dir, files) {
    withKubeConfig(caCertificate: '', clusterName: '', contextName: '', credentialsId: 'chaos', namespace: env.namespace, serverUrl: env.serverUrl) {
        dir(dir) {
            sh "kubectl apply -f ${files} -n ${env.namespace}"
        }
    }
}
